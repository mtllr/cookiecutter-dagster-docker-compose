[tox]
envlist =
  py{39,38,37,36}-{unix,windows}-{not_graphql_context_test_suite,sqlite_instance_multi_location,sqlite_instance_managed_grpc_env,sqlite_instance_deployed_grpc_env,graphql_python_client}
  py{39,38,37,36}-{unix,windows}-postgres-{graphql_context_variants,instance_multi_location,instance_managed_grpc_env,instance_deployed_grpc_env}


skipsdist = true

[testenv]
download = True
passenv = CI_* COVERALLS_REPO_TOKEN BUILDKITE* POSTGRES_TEST_DB_HOST
setenv =
  STRICT_GRPC_SERVER_PROCESS_WAIT = "1"
deps =
  -e ../dagster[test]
  postgres: -e ../libraries/dagster-postgres
  -e .
allowlist_externals =
  /bin/bash
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  not_graphql_context_test_suite: pytest -c ../../pyproject.toml -m "not graphql_context_test_suite and not graphql_context_variants and not python_client_test_suite" -vv {posargs}
  sqlite_instance_multi_location: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and sqlite_instance and multi_location" -vv {posargs}
  sqlite_instance_managed_grpc_env: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and sqlite_instance and managed_grpc_env" -vv {posargs}
  sqlite_instance_deployed_grpc_env: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and sqlite_instance and deployed_grpc_env" -vv {posargs}
  sqlite_instance_code_server_cli_grpc_env: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and sqlite_instance and code_server_cli_grpc_env" -vv {posargs}
  graphql_python_client: pytest -c ../../pyproject.toml -m "python_client_test_suite" -vv {posargs}
  postgres-graphql_context_variants: pytest -c ../../pyproject.toml -m "not graphql_context_test_suite and graphql_context_variants" -vv {posargs}
  postgres-instance_multi_location: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and postgres_instance and multi_location" -vv {posargs}
  postgres-instance_managed_grpc_env: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and postgres_instance and managed_grpc_env" -vv {posargs}
  postgres-instance_deployed_grpc_env: pytest -c ../../pyproject.toml -m "graphql_context_test_suite and postgres_instance and deployed_grpc_env" -vv {posargs}
